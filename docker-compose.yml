# services:
#   express-app:
#     build: .
#     container_name: express-container
#     ports:
#       - "3000:3000"  # Map host port 3000 to container port 3000
#     environment:
#       DB_HOST: ${DB_HOST}
#       DB_PORT: ${DB_PORT}
#       DB_USERNAME: ${DB_USERNAME}
#       DB_PASSWORD: ${DB_PASSWORD}
#       DB_DATABASE: ${DB_DATABASE}
#       NODE_ENV: ${NODE_ENV}
#       JWT_SECRET: ${JWT_SECRET}


version: '3'
services:
  express-app:
    build: .
    container_name: express-container
    ports:

      - "3001:3000"  # Map host port 3000 to container port 3000

    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      NODE_ENV: ${NODE_ENV}
      JWT_SECRET: ${JWT_SECRET}

    volumes:
      - .:/usr/src/app        # Mount the current directory to /usr/src/app in the container
      - /usr/src/app/node_modules  # Avoid overwriting node_modules in the container

      TELEGRAM_TOKEN: ${TELEGRAM_TOKEN}
    depends_on:
      - database
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  database:
    image: postgres:14-alpine
    restart: always
    ports:
      - "5439:5432"
    volumes:
      - postgres-data1:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - "5051:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    depends_on:
      - database
    volumes:
      - pgadmin-data:/var/lib/pgadmin

volumes:
  postgres-data1:
  pgadmin-data:
     
      

      
